"0","```r
# Filter to combos with more than 20% of periods as zero
df.ts %<>% filter(pct_zero >= 20 & pct_zero < 80)

# Make tsibble again
df.ts %<>% as_tsibble(key=COMBO_SPLIT,index=CAL_PERIOD)

# Create training set
train <- df.ts %>%
  group_by(COMBO_SPLIT) %>% 
  slice_head(prop=0.8) %>% 
  as_tsibble(key=COMBO_SPLIT,index=CAL_PERIOD)

# Fit all models described above, this command automatically chooses the parameters for each kind of model based on lowest model fitment criteria scores
plan(multisession)

fit <- train %>% 
  group_by(COMBO_SPLIT) %>% 
  model(
    mean = MEAN(UNITS),
    croston = CROSTON(UNITS,type=\"sbj\"),
    neural = NNETAR(UNITS,lambda = 0)
  ) %>% 
  mutate(combination=(mean+croston+neural)/3)

# Forecast test data
test <- df.ts %>% 
  group_by(COMBO_SPLIT) %>% 
  anti_join(train) %>% 
  as_tsibble(key=COMBO_SPLIT,index=CAL_PERIOD)

plan(multisession)

fc <- fit %>% 
  forecast(test)

# Calculate test accuracy
test.acc.fable <- fabletools::accuracy(fc,df.ts)
```"
