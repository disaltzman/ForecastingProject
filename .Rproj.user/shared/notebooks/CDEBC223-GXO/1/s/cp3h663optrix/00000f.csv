"0","source_python(""../forecast_categories_v1.py"")"
"0",""
"0","df.ts %<>% "
"0","  as_tibble() %>% "
"0","  mutate(PERIOD_DATE=as.Date(PERIOD_DATE),"
"0","         OFFSET=as.numeric(PERIOD_DATE-today())) %>%"
"0","  rename(CAL_PERIOD=PERIOD_DATE,UNITS=QTY,COMBO_SPLIT=PRODUNIT_ID)"
"0","  "
"0","df.ts <- forecast_plots(df.ts)"
"2","../forecast_categories_v1.py:76: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  A1 = A1.groupby(['CAL_PERIOD','OFFSET']).sum().reset_index()
../forecast_categories_v1.py:77: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. "
"2","Either specify numeric_only or select only columns which should be valid for the function.
  A2 = A2.groupby(['CAL_PERIOD','OFFSET']).sum().reset_index()
../forecast_categories_v1.py:78: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  A3 = A3.groupby(['CAL_PERIOD','OFFSET']).sum().reset_index()
../forecast_categories"
"2","_v1.py:79: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  B1 = B1.groupby(['CAL_PERIOD','OFFSET']).sum().reset_index()
../forecast_categories_v1.py:80: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric"
"2","_only or select only columns which should be valid for the function.
  B2 = B2.groupby(['CAL_PERIOD','OFFSET']).sum().reset_index()
../forecast_categories_v1.py:81: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  B3 = B3.groupby(['CAL_PERIOD','OFFSET']).sum().reset_index()
../forecast_categories_v1.py:82: FutureWarni"
"2","ng: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  C1 = C1.groupby(['CAL_PERIOD','OFFSET']).sum().reset_index()
../forecast_categories_v1.py:83: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only c"
"2","olumns which should be valid for the function.
  C2 = C2.groupby(['CAL_PERIOD','OFFSET']).sum().reset_index()
../forecast_categories_v1.py:84: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  C3 = C3.groupby(['CAL_PERIOD','OFFSET']).sum().reset_index()
"
"0","kable(df.ts %>% "
"0","  group_by(DEMAND_CATEGORY) %>%"
"0","  summarise(n=n_distinct(COMBO_SPLIT))) %>% "
"0","  kable_styling(full_width = F)"
